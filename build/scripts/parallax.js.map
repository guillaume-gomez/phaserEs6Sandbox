{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "src/parallax/index.js",
    "src/parallax/states/GameState.js"
  ],
  "names": [],
  "mappings": "AAAA;;;ACAA;;;;;;;;;;;;;;;;;;;;;;;;;;I,AAEM;sBAEJ;;sBAAc;0BAAA;;4FAAA,AACN,KADM,AACD,KAAK,OADJ,AACW,MADX,AACiB,WADjB,AAC4B,AACxC;;UAAA,AAAK,cAAL,AAAmB,AACnB;UAAA,AAAK,MAAL,AAAW,IAAX,AAAe,kCAAf,AAAuC,AACvC;UAAA,AAAK,MAAL,AAAW,MAJC,AAIZ,AAAiB;WAClB;;;;EAPoB,O,AAAO;;AAU9B,IAAA,AAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZJ,IAAM,OAAN,AAAa;;AAEb,IAAM,sBAAN,AAA4B;AAC5B,IAAM,sBAAN,AAA4B;AAC5B,IAAM,sBAAN,AAA4B;;AAE5B,IAAM,SAAN,AAAe;;I,AAET;;;;;;;;;;;6BAEK,AACP;AACA;WAAA,AAAK,KAAL,AAAU,QAAV,AAAkB,YAAY,OAAA,AAAO,QAArC,AAA6C,AAC7C;AACA;WAAA,AAAK,KAAL,AAAU,MAAV,AAAgB,kBAAhB,AAAkC,AAClC;WAAA,AAAK,gBAAgB,KAAA,AAAK,KAAL,AAAU,IAAV,AAAc,WAAd,AAAyB,GAC1C,KAAA,AAAK,KAAL,AAAU,SAAV,AAAmB,sBADF,AACwB,QACzC,KAAA,AAAK,KAFY,AAEP,OAFO,AAGjB,qBAHJ,AAAqB,AAIjB,AAGJ;;WAAA,AAAK,gBAAgB,KAAA,AAAK,KAAL,AAAU,IAAV,AAAc,WAAd,AAAyB,GAC1C,KAAA,AAAK,KAAL,AAAU,SAAV,AAAmB,sBADF,AACwB,QACzC,KAAA,AAAK,KAFY,AAEP,OAFO,AAGjB,qBAHJ,AAAqB,AAIjB,AAGJ;;WAAA,AAAK,gBAAgB,KAAA,AAAK,KAAL,AAAU,IAAV,AAAc,WAAd,AAAyB,GAC1C,KAAA,AAAK,KAAL,AAAU,SAAV,AAAmB,sBADF,AACwB,QACzC,KAAA,AAAK,KAFY,AAEP,OAFO,AAGjB,qBAHJ,AAAqB,AAIjB,AAEL;;;;6BAEQ,AACP;WAAA,AAAK,cAAL,AAAmB,aAAnB,AAAgC,KAAhC,AAAqC,AACrC;WAAA,AAAK,cAAL,AAAmB,aAAnB,AAAgC,KAAhC,AAAqC,AACrC;WAAA,AAAK,cAAL,AAAmB,aAAnB,AAAgC,KAAhC,AAAqC,AACtC;;;;8BAES,AACR;WAAA,AAAK,KAAL,AAAU,KAAV,AAAe,MAAf,AAAqB,kBAAkB,OAAvC,AAA8C,AAC9C;WAAA,AAAK,KAAL,AAAU,KAAV,AAAe,MAAf,AAAqB,kBAAkB,OAAvC,AAA8C,AAC9C;WAAA,AAAK,KAAL,AAAU,KAAV,AAAe,MAAf,AAAqB,kBAAkB,OAAvC,AAA8C,AAC/C;;;;;EAvCqB,O,AAAO;;kB,AA2ChB",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "import GameState from 'states/GameState';\n\nclass Parallax extends Phaser.Game {\n\n  constructor() {\n    super(800, 600, Phaser.AUTO, 'content', null);\n    this.transparent = false;\n    this.state.add('GameState', GameState, false);\n    this.state.start('GameState');\n  }\n}\n\nnew Parallax();\n",
    "const PATH = \"res/parallax/\";\n\nconst MountainsBackHeight = 894;\nconst MountainsMid1Height = 770;\nconst MountainsMid2Height = 482;\n\nconst Offset = 200;\n\nclass GameState extends Phaser.State {\n\n  create() {\n    //Enable Arcade Physics\n    this.game.physics.startSystem(Phaser.Physics.ARCADE);\n    //Set the games background colour\n    this.game.stage.backgroundColor = '#697e96';\n    this.mountainsBack = this.game.add.tileSprite(0,\n        this.game.height - MountainsBackHeight + Offset,\n        this.game.width,\n        MountainsBackHeight,\n        'mountains-back'\n    );\n\n    this.mountainsMid1 = this.game.add.tileSprite(0,\n        this.game.height - MountainsMid1Height + Offset,\n        this.game.width,\n        MountainsMid1Height,\n        'mountains-mid1'\n    );\n\n    this.mountainsMid2 = this.game.add.tileSprite(0,\n        this.game.height - MountainsMid2Height + Offset,\n        this.game.width,\n        MountainsMid2Height,\n        'mountains-mid2'\n    );\n  }\n\n  update() {\n    this.mountainsBack.tilePosition.x -= 0.05;\n    this.mountainsMid1.tilePosition.x -= 0.3;\n    this.mountainsMid2.tilePosition.x -= 0.75;\n  }\n\n  preload() {\n    this.game.load.image('mountains-back', PATH + 'mountains-back.png');\n    this.game.load.image('mountains-mid1', PATH + 'mountains-mid1.png');\n    this.game.load.image('mountains-mid2', PATH + 'mountains-mid2.png');\n  }\n\n}\n\nexport default GameState;"
  ]
}