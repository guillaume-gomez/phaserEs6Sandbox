{
  "version": 3,
  "sources": [
    "node_modules/browser-pack/_prelude.js",
    "src/parallax/index.js",
    "src/parallax/objects/DayCycle.js",
    "src/parallax/objects/Weather.js",
    "src/parallax/states/GameState.js"
  ],
  "names": [],
  "mappings": "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",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "import GameState from 'states/GameState';\n\nclass Parallax extends Phaser.Game {\n\n  constructor() {\n    super(800, 600, Phaser.AUTO, 'content', null);\n    this.transparent = false;\n    this.state.add('GameState', GameState, false);\n    this.state.start('GameState');\n  }\n\n  weather() {\n  \treturn this.state.states.GameState.weather;\n  }\n}\n\nwindow.game = new Parallax();\n",
    "class DayCycle {\n\n  constructor(game, dayLength) {\n      this.game = game;\n      this.dayLength = dayLength;\n      this.shading = false;\n      this.sunSprite = false;\n      this.moonSprite = false;\n  }\n\n  initSun(sprite) {\n      this.sunSprite = sprite;\n      this.sunset(sprite);\n  }\n\n  initMoon(sprite) {\n      this.moonSprite = sprite;\n      this.moonrise(sprite);\n  }\n\n  initShading(sprites) {\n      this.shading = sprites;\n  }\n\n  sunrise(sprite) {\n    sprite.position.x = this.game.width - (this.game.width / 4);\n\n    this.sunTween = this.game.add.tween(sprite).to( { y: - 250 }, this.dayLength, null, true);\n    this.sunTween.onComplete.add(this.sunset, this);\n\n    if(this.shading){\n        this.shading.forEach((sprite) => {\n            this.tweenTint(sprite.sprite, sprite.from, sprite.to, this.dayLength);\n        });\n    }\n  }\n\n  sunset(sprite) {\n    sprite.position.x = 50;\n\n    this.sunTween = this.game.add.tween(sprite).to( { y: this.game.world.height }, this.dayLength, null, true);\n    this.sunTween.onComplete.add(this.sunrise, this);\n\n    if(this.shading){\n        this.shading.forEach((sprite) => {\n            this.tweenTint(sprite.sprite, sprite.to, sprite.from, this.dayLength);\n        });\n    }\n  }\n\n  moonrise(sprite){\n    sprite.position.x = this.game.width - (this.game.width / 4);\n\n    this.moonTween = this.game.add.tween(sprite).to( { y: -350 }, this.dayLength, null, true);\n    this.moonTween.onComplete.add(this.moonset, this);\n  }\n\n  moonset(sprite){\n    sprite.position.x = 50;\n\n    this.moonTween = this.game.add.tween(sprite).to( { y: this.game.world.height }, this.dayLength, null, true);\n    this.moonTween.onComplete.add(this.moonrise, this);\n  }\n\n  tweenTint(spriteToTween, startColor, endColor, duration) {\n\n      let colorBlend = {step: 0};\n\n      this.game.add.tween(colorBlend).to({step: 100}, duration, Phaser.Easing.Default, false)\n          .onUpdateCallback(() => {\n              spriteToTween.tint = Phaser.Color.interpolateColor(startColor, endColor, 100, colorBlend.step, 1);\n          })\n          .start()\n\n  }\n\n}\n\nexport default DayCycle;",
    "class Weather {\n\n  constructor(game) {\n      this.game = game;\n  }\n\n  addFog() {\n    let fog = this.game.add.bitmapData(this.game.width, this.game.height);\n\n    fog.ctx.rect(0, 0, this.game.width, this.game.height);\n    fog.ctx.fillStyle = '#b2ddc8';\n    fog.ctx.fill();\n\n    this.fogSprite = this.game.add.sprite(0, 0, fog);\n    this.fogSprite.alpha = 0;\n    this.game.add.tween(this.fogSprite).to( { alpha: 0.7 }, 6000, null, true);\n  }\n\n  removeFog() {\n    let fogTween = this.game.add.tween(this.fogSprite).to( { alpha: 0 }, 6000, null, true);\n    fogTween.onComplete.add(() => {\n        this.fogSprite.destroy();\n    }, this);\n  }\n\n  addRain() {\n    let rainParticle = this.game.add.bitmapData(15, 50);\n\n    rainParticle.ctx.rect(0, 0, 15, 50);\n    rainParticle.ctx.fillStyle = '#9cc9de';\n    rainParticle.ctx.fill();\n\n    this.emitter = this.game.add.emitter(this.game.world.centerX, -300, 400);\n\n    this.emitter.width = this.game.world.width;\n    this.emitter.angle = 10;\n\n    this.emitter.makeParticles(rainParticle);\n\n    this.emitter.minParticleScale = 0.1;\n    this.emitter.maxParticleScale = 0.3;\n\n    this.emitter.setYSpeed(600, 1000);\n    this.emitter.setXSpeed(-5, 5);\n\n    this.emitter.minRotation = 0;\n    this.emitter.maxRotation = 0;\n    this.emitter.start(false, 1600, 5, 0);\n  }\n\n  removeRain() {\n    this.emitter.destroy();\n  }\n\n}\n\nexport default Weather;",
    "import DayCycle from 'objects/DayCycle';\nimport Weather from 'objects/Weather';\n\nconst PATH = \"res/parallax/\";\n\nconst MountainsBackHeight = 894;\nconst MountainsMid1Height = 770;\nconst MountainsMid2Height = 482;\n\nconst Offset = 200;\n\nclass GameState extends Phaser.State {\n\n  create() {\n    //Enable Arcade Physics\n    this.game.physics.startSystem(Phaser.Physics.ARCADE);\n    //Set the games background colour\n\n    this.dayCycle = new DayCycle(this.game, 10000);\n\n    let bgBitMap = this.game.add.bitmapData(this.game.width, this.game.height);\n    bgBitMap.ctx.rect(0, 0, this.game.width, this.game.height);\n    bgBitMap.ctx.fillStyle = '#b2ddc8';\n    bgBitMap.ctx.fill();\n\n    this.backgroundSprite = this.game.add.sprite(0, 0, bgBitMap);\n\n    this.sunSprite = this.game.add.sprite(50, -250, 'sun');\n    this.moonSprite = this.game.add.sprite(this.game.width - (this.game.width / 4), this.game.height + 500, 'moon');\n\n\n    //example of cache this.game.cache.getImage('mountains-back').height (the data is loaded in a parent state)\n    this.mountainsBack = this.game.add.tileSprite(0,\n        this.game.height - MountainsBackHeight + Offset,\n        this.game.width,\n        MountainsBackHeight,\n        'mountains-back'\n    );\n\n    this.mountainsMid1 = this.game.add.tileSprite(0,\n        this.game.height - MountainsMid1Height + Offset,\n        this.game.width,\n        MountainsMid1Height,\n        'mountains-mid1'\n    );\n\n    this.mountainsMid2 = this.game.add.tileSprite(0,\n        this.game.height - MountainsMid2Height + Offset,\n        this.game.width,\n        MountainsMid2Height,\n        'mountains-mid2'\n    );\n\n    let backgroundSprites = [\n        {sprite: this.backgroundSprite, from: 0x1f2a27, to: 0xB2DDC8},\n        {sprite: this.mountainsBack,    from: 0x2f403b, to: 0x96CCBB},\n        {sprite: this.mountainsMid1,    from: 0x283632, to: 0x8BBCAC},\n        {sprite: this.mountainsMid2,    from: 0x202b28, to: 0x82AD9D}\n    ];\n\n    this.dayCycle.initShading(backgroundSprites);\n    this.dayCycle.initSun(this.sunSprite);\n    this.dayCycle.initMoon(this.moonSprite);\n\n    this.weather = new Weather(this.game);\n  }\n\n  update() {\n    this.mountainsBack.tilePosition.x -= 0.05;\n    this.mountainsMid1.tilePosition.x -= 0.3;\n    this.mountainsMid2.tilePosition.x -= 0.75;\n  }\n\n  preload() {\n    this.game.load.image('mountains-back', PATH + 'mountains-back.png');\n    this.game.load.image('mountains-mid1', PATH + 'mountains-mid1.png');\n    this.game.load.image('mountains-mid2', PATH + 'mountains-mid2.png');\n    this.game.load.image('sun', PATH + 'sun.png');\n    this.game.load.image('moon', PATH + 'moon.png');\n  }\n\n}\n\nexport default GameState;"
  ]
}