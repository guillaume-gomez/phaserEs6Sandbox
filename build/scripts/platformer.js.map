{
  "version": 3,
  "sources": [
    "node_modules/browser-pack/_prelude.js",
    "src/platformer/index.js",
    "src/platformer/states/Constants.js",
    "src/platformer/states/GameState.js"
  ],
  "names": [],
  "mappings": "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",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "import GameState from 'states/GameState';\n\nclass Game extends Phaser.Game {\n\n  constructor() {\n    super(500, 200, Phaser.AUTO, 'content', null);\n    this.state.add('Game', GameState, false);\n    this.state.start('Game');\n  }\n}\n\nnew Game();\n",
    "export function isMobileAndTablet() {\n  let check = false;\n  (function(a){if(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0,4))) check = true;})(navigator.userAgent||navigator.vendor||window.opera);\n  return check;\n};",
    "import { isMobileAndTablet } from \"./Constants.js\";\nconst ASSETS_FOLDER = \"res/platformer/\";\n\nclass GameState extends Phaser.State {\n\n  create() {\n    this.game.stage.backgroundColor = '#3598db';\n    // Start the Arcade physics system (for movements and collisions)\n    this.game.physics.startSystem(Phaser.Physics.ARCADE);\n    // Add the physics engine to all game objects\n    this.game.world.enableBody = true;\n\n    // Variable to store the arrow key pressed\n    this.cursor = this.game.input.keyboard.createCursorKeys();\n\n    // Create the player in the middle of the game\n    this.player = this.game.add.sprite(70, 100, 'player');\n\n    // Add gravity to make it fall\n    this.player.body.gravity.y = 600;\n\n    // Create 3 groups that will contain our objects\n    this.walls = this.game.add.group();\n    this.coins = this.game.add.group();\n    this.enemies = this.game.add.group();\n\n    // Design the level. x = wall, o = coin, ! = lava.\n    const level = [\n        'xxxxxxxxxxxxxxxxxxxxxx',\n        '!         !          x',\n        '!                 o  x',\n        '!         o          x',\n        '!                    x',\n        '!     o   !    x     x',\n        'xxxxxxxxxxxxxxxx!!!!!x',\n    ];\n    // Create the level by going through the array\n    for (var i = 0; i < level.length; i++) {\n      for (var j = 0; j < level[i].length; j++) {\n\n          // Create a wall and add it to the 'walls' group\n          if (level[i][j] == 'x') {\n              var wall = this.game.add.sprite(30 + 20 * j, 30 + 20 * i, 'wall');\n              this.walls.add(wall);\n              wall.body.immovable = true;\n          }\n\n          // Create a coin and add it to the 'coins' group\n          else if (level[i][j] == 'o') {\n              var coin = this.game.add.sprite(30 + 20 * j, 30 + 20 * i, 'coin');\n              this.coins.add(coin);\n          }\n\n          // Create a enemy and add it to the 'enemies' group\n          else if (level[i][j] == '!') {\n              var enemy = this.game.add.sprite(30 + 20 * j, 30 + 20 * i, 'lava');\n              this.enemies.add(enemy);\n          }\n      }\n    }\n    this.jump = false;\n    this.left = this.right = false;\n    if(this.isMobileAndTablet) {\n      const fnJumpUp = () => {this.jump = false};\n      const fnJumpDown = () => {if (this.player.body.touching.down) this.jump = true};\n      this.buttonjump = this.game.add.button(400, 175, 'up', null, this, 0, 1, 0, 1);\n      this.buttonjump.fixedToCamera = true;\n      this.buttonjump.events.onInputOver.add(fnJumpDown);\n      this.buttonjump.events.onInputOut.add(fnJumpUp);\n      this.buttonjump.events.onInputDown.add(fnJumpDown);\n      this.buttonjump.events.onInputUp.add(fnJumpUp);\n\n      const fnLeftUp = () => {this.left = false};\n      const fnLeftDown = () => {this.left = true};\n      this.buttonleft = this.game.add.button(50, 175, 'left', null, this, 0, 1, 0, 1);\n      this.buttonleft.fixedToCamera = true;\n      this.buttonleft.events.onInputOver.add(fnLeftDown);\n      this.buttonleft.events.onInputOut.add(fnLeftUp);\n      this.buttonleft.events.onInputDown.add(fnLeftDown);\n      this.buttonleft.events.onInputUp.add(fnLeftUp);\n\n      const fnRightUp = () => {this.right = false};\n      const fnRightDown = () => {this.right = true};\n      this.buttonright = this.game.add.button(100, 175, 'right', null, this, 0, 1, 0, 1);\n      this.buttonright.fixedToCamera = true;\n      this.buttonright.events.onInputOver.add(fnRightDown);\n      this.buttonright.events.onInputOut.add(fnRightUp);\n      this.buttonright.events.onInputDown.add(fnRightDown);\n      this.buttonright.events.onInputUp.add(fnRightUp);\n    }\n  }\n\n  move() {\n    if (this.right) {\n      this.player.body.velocity.x = 200;\n    }\n    else if(this.left) {\n      this.player.body.velocity.x = -200;\n    }\n    else {\n      this.player.body.velocity.x = 0;\n    }\n    // Make the player jump if he is touching the ground\n    if (this.jump) {\n        this.player.body.velocity.y = -250;\n        this.jump = false;\n    }\n  }\n\n  update() {\n    // Make the player and the walls collide\n    this.game.physics.arcade.collide(this.player, this.walls);\n\n    // Call the 'takeCoin' function when the player takes a coin\n    this.game.physics.arcade.overlap(this.player, this.coins, this.takeCoin, null, this);\n\n    // Call the 'restart' function when the player touches the enemy\n    this.game.physics.arcade.overlap(this.player, this.enemies, this.restart, null, this);\n    this.move();\n    if(!this.isMobileAndTablet) {\n      // Move the player when an arrow key is pressed\n      if (this.cursor.left.isDown) {\n        this.left = true;\n      }\n      if (this.cursor.right.isDown) {\n          this.right = true;\n      }\n      if (this.cursor.left.isUp) {\n          this.left = false;\n      }\n      if (this.cursor.right.isUp) {\n          this.right = false;\n      }\n      // Make the player jump if he is touching the ground\n      if (this.cursor.up.isDown && this.player.body.touching.down) {\n        this.jump = true\n      }\n      else if(this.cursor.up.isUp){\n        this.jump = false;\n      }\n    }\n  }\n\n  preload() {\n    this.game.load.image('player', ASSETS_FOLDER + 'player.png');\n    this.game.load.image('wall', ASSETS_FOLDER + 'wall.png');\n    this.game.load.image('coin', ASSETS_FOLDER + 'coin.png');\n    this.game.load.image('lava', ASSETS_FOLDER + 'lava.png');\n\n    this.game.load.image('left', ASSETS_FOLDER + 'left.png');\n    this.game.load.image('right', ASSETS_FOLDER + 'right.png');\n    this.game.load.image('up', ASSETS_FOLDER + 'up.png');\n\n    this.isMobileAndTablet = isMobileAndTablet();\n  }\n\n  takeCoin(player, coin) {\n    coin.kill();\n  }\n\n  restart() {\n    this.game.state.start('Game');\n  }\n\n  render() {\n    //this.game.debug.spriteInfo(this.player, 32, 32);\n  }\n}\n\nexport default GameState;\n"
  ]
}