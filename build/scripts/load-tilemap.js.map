{
  "version": 3,
  "sources": [
    "node_modules/browser-pack/_prelude.js",
    "src\\load-tilemap\\index.js",
    "src\\load-tilemap\\object\\Car.js",
    "src\\load-tilemap\\states\\GameState.js"
  ],
  "names": [],
  "mappings": "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",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "import GameState from 'states/GameState';\n\nclass LoadTilemap extends Phaser.Game {\n\n  constructor() {\n    super(800, 600, Phaser.AUTO, 'content', null);\n    this.transparent = true;\n    this.state.add('GameState', GameState, false);\n    this.state.start('GameState');\n  }\n}\n\nnew LoadTilemap();\n",
    "const OFFSET = 90;\nclass Car extends Phaser.Sprite {\n\n  constructor(game, x, y, key, frame) {\n    super(game, x, y, key, frame);\n    this.game = game;\n    this.anchor.x = 0.5;\n    this.anchor.y = 0.5;\n    this.cursors = game.input.keyboard.createCursorKeys();\n    this.angle = OFFSET;\n  }\n\n  update() {\n    this.body.velocity.x = 0;\n    this.body.velocity.y = 0;\n    this.body.angularVelocity = 0;\n\n    if (this.cursors.left.isDown)\n    {\n        this.body.angularVelocity = -200;\n    }\n    else if (this.cursors.right.isDown)\n    {\n        this.body.angularVelocity = 200;\n    }\n\n    if (this.cursors.up.isDown)\n    {\n        this.body.velocity.copyFrom(this.game.physics.arcade.velocityFromAngle(this.angle - OFFSET, 300));\n    }\n  }\n}\n\nexport default Car;",
    "import Car from 'object/Car';\nconst PATH = \"res/load-tilemap\";\n\nclass GameState extends Phaser.State {\n\n  create() {\n    this.map = this.game.add.tilemap('Map1');\n    this.map.addTilesetImage('Desert', 'Tileset');\n    this.layer = this.map.createLayer('Ground');\n    this.layer.resizeWorld();\n    this.map.setCollision(31, true, this.layer);\n    this.car = new Car(this.game, 200, 200, 'car');\n    this.game.add.existing(this.car);\n    this.game.physics.enable(this.car);\n    this.game.camera.follow(this.car);\n  }\n\n  update() {\n    this.game.physics.arcade.collide(this.car, this.layer);\n  }\n\n  preload() {\n     this.game.load.tilemap('Map1', PATH + \"/my-tilemap.json\", null, Phaser.Tilemap.TILED_JSON);\n     this.game.load.image('Tileset', PATH + \"/tmw_desert_spacing.png\");\n     this.game.load.image('car', PATH + \"/car.png\");\n  }\n}\n\nexport default GameState;\n"
  ]
}